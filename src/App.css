:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
  min-height: 100vh;
}

#root {
  display: contents;
}

main {
  width: 100vw;
  min-height: 100vh;
  display: flex;
  align-items: flex-start;
  justify-content: center;
}

.Grid {
  --grid-rows: unset; /* set using `style` property */
  --grid-cols: unset; /* set using `style` property */
  --grid-padding: 1rem;
  --grid-spacing: 0.125rem;
  --grid-cell-template: 1fr;

  --grid-total-padding: calc(2 * var(--grid-padding));
  --grid-total-spacing: calc((var(--grid-cols) - 1) * var(--grid-spacing));
  --grid-total-available-space: calc(100vw - var(--grid-total-padding) - var(--grid-total-spacing));
  --grid-cell-size: calc(var(--grid-total-available-space) / var(--grid-cols));

  display: grid;
  padding: var(--grid-padding);
  gap: var(--grid-spacing);
  grid-template-columns: repeat(var(--grid-cols), var(--grid-cell-template));
  grid-template-rows: repeat(var(--grid-rows), var(--grid-cell-template));
  background: wheat;
}

.GridRow {
  display: contents;
}

.GridCell {
  aspect-ratio: 1 / 1;
  width: var(--grid-cell-size);
  overflow: hidden;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.75rem;
  font-weight: 900;
  background: white;
  color: cornflowerblue;
}

@media screen and (max-width: 800px) {
  .GridCell {
    border-radius: 50%;
    font-size: 0;
    color: transparent;
  }
}